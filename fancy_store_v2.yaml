openapi: 3.0.0
info:
  version: 2.0.0
  title: New Fancy Petstore
  x-service: fancy-petstore-service
  x-transport: ECST
  description: >-
    A sample API that uses a petstore as an example to demonstrate features in
    the OpenAPI 3.0 specification, with Event-carried state transfer (ECST)
  termsOfService: 'http://fancy.io/terms/'
  contact:
    name: Fancy API Team
    email: apiteam@fancy.io
    url: 'http://fancy.io'
    x-chat: 'https://de.wikipedia.org/wiki/Chat'
    x-issueTracker: 'https://www.atlassian.com/de/software/jira'
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'http://t-petstore.fancy.io/api'
    description: 'Test'
externalDocs:
  url: 'https://github.com/'
  description: Source Code
x-externalServices:
  - url: 'https://github.com/pact-foundation/pact_broker'
    description: 'Pact Broker'
  - url: 'https://www.dynatrace.de/'
    description: 'Dynatrace'
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
paths:
  /pets:
    get:
      description: >
        Returns all pets from the system that the user has access to

        Nam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus
        sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem.
        Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis
        mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse
        platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean
        pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras
        quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna
        volutpat venenatis eget eget mauris. In eleifend fermentum facilisis.
        Praesent enim enim, gravida ac sodales sed, placerat id erat.
        Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum
        libero. Morbi euismod sagittis libero sed lacinia.


        Sed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu
        condimentum ligula luctus nec. Phasellus semper velit eget aliquet
        faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum
        lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius
        odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae.
        Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada
        accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit
        amet auctor felis gravida. Sed libero lorem, molestie sed nisl in,
        accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed
        vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu,
        euismod sapien.
      operationId: findPets
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - developers
      description: Creates a new pet in the store. Duplicates are allowed
      operationId: addPet
      requestBody:
        description: Pet to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPet'
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/pets/{id}':
    get:
      description: >-
        Returns a user based on a single ID, if the user does not have access to
        the pet
      operationId: find pet by id
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - developers
      description: >-
        Returns a user based on a single ID, if the user does not have access to
        the pet
      operationId: change pet by id
      requestBody:
        description: Changed Pet data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
      parameters:
        - name: id
          in: path
          description: ID of pet to change
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - admins
      description: deletes a single pet based on the ID supplied
      operationId: deletePet
      parameters:
        - name: id
          in: path
          description: ID of pet to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: pet deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Pet:
      allOf:
        - $ref: '#/components/schemas/NewPet'
        - type: object
          required:
            - id
          properties:
            id:
              type: integer
              format: int64
    NewPet:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        tag:
          type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
